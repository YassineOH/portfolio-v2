---
import ContentWrapper from '~/components/ContentWrapper.astro';
import Base from '~/layouts/Base.astro';
import TechCards from '~/components/TechCards.astro';
---

<Base pageTitle='About me'>
  <main class='container mx-auto py-12 pt-24 lg:py-24'>
    <ContentWrapper articleId='about-me'>
      <h1>نبذة عني.</h1>
      <p>
        مرحبًا، أنا <strong>ياسين أفقير حما</strong> من المغرب، وُلدت عام 1998. درست
        الطاقة المتجددة في الجامعة، لكنني قررت لاحقًا تغيير مساري المهني إلى تطوير
        الويب. يمكنك معرفة المزيد عن <a href='/ar/#dev-journey-section'
          >رحلتي في تطوير البرمجيات</a
        > ولماذا اتخذت هذا القرار.
      </p>
      <p>
        حاليًا، أعمل كمهندس طاقة شمسية منذ عامين، لكنني أبحث بنشاط عن فرص جديدة
        في مجال تطوير الويب. كما ستلاحظ في قسم مشاريعي، أركز على بناء مشاريع ذات
        صلة <em>بالطاقة الشمسية</em>
        حتى أتمكن من تطبيق الحالات العملية، متجنبًا العمل المتكرر والمشاريع العامة.
      </p>
      <p>
        أنا شغوف بالتكنولوجيا، سواء كانت تتعلق بالأجهزة أو البرمجيات، لكن لدي
        أيضًا اهتمامات أخرى مثل قراءة <em>الأدب العربي</em> و لعب ألعاب الفيديو.
      </p>
    </ContentWrapper>
    <section id='stack' class='py-12 lg:py-24'>
      <ContentWrapper>
        <h1>التقنيات التي أستخدمها</h1>
        <h2>
          باختصار ال <span class='bg-[#3178c6] text-white'>Type Safety</span>❤️.
        </h2>
        <p>
          يوفر TypeScript تجربة تطوير استثنائية، مما يتيح تدفق عمل سلس بين تطوير
          الواجهة الأمامية (client و الخادم (server). خاصة مع ظهور ال
          <strong>React Server Components (RSC)</strong>، أصبحت الفجوة بين
          الواجهة الأمامية (client) و الخادم (server) أكثر مرونة، مما جعل سلامة
          الأنواع في TypeScript أكثر أهمية. فهي تضمن الحفاظ على سلامة البيانات
          عبر جميع أجزاء المشروع، مما يتيح لك التركيز على بناء الميزات دون القلق
          بشأن التناقضات.
        </p>
        <p>
          أما فيما يتعلق في أطر العمل, فإن اختياري يعتمد على طبيعة المشروع.
          بالنسبة للمشاريع التي تعتمد على المحتوى الثابت, أفضل العمل ب <strong>
            Astro.js</strong
          >, أما إذا تعلق الأمر بتطبيقات الويب, عادة ما أذهب لاستعمال <strong
            >Next.js</strong
          >.
        </p>
        <div class='space-y-4 pt-6'>
          <TechCards tag='language' title='لغات البرمجة' />
          <TechCards tag='framework' title='أطر العمل' />
          <TechCards tag='core' title='مكتبة واجهة المستخدم' />
          <TechCards tag='styling' title='التشكيل' />
          <TechCards tag='db' title='قواعد البيانات' />
          <TechCards tag='state' title='إدارة الحالة' />
          <TechCards tag='tool' title='أدوات أخرى' />
          <TechCards tag='env' title='بيئة التطوير' />
          <TechCards tag='design' title='التصميم و الأصول' />
        </div>
      </ContentWrapper>
    </section>
  </main>
</Base>
