---
import LeetCodeCard from '~/components/LeetCodeCard.astro';
import ContentWrapper from '~/components/ContentWrapper.astro';
import Base from '~/layouts/Base.astro';

import { Content } from '~/md/en/about.md';
import Heading from '~/components/Heading.astro';
---

<Base pageTitle='About me'>
  <main class='container mx-auto py-12 lg:py-24'>
    <ContentWrapper
      articleId='about-me'
      class='prose prose-sm animate-fade-up prose-h1:prose-2xl dark:prose-invert lg:prose-base prose-h1:font-headings lg:prose-h1:text-3xl'
    >
      <Content />
    </ContentWrapper>

    <section id='stack' class='py-12 lg:py-24'>
      <ContentWrapper class='space-y-4'>
        <Heading tag='h2'> The stack I use </Heading>
        <Heading tag='h3'>
          It's all about <span class='bg-[#3178c6] text-white'>Type Safety</span
          >❤️.
        </Heading>
        <p class='prose'>
          TypeScript offers an exceptional developer experience, allowing for a
          seamless workflow across both client and server development. With the
          advent of <strong>React Server Components (RSC)</strong>, the
          distinction between client and server has become more fluid, making
          TypeScript's type safety even more valuable. It ensures that data
          integrity is maintained across the entire stack, so you can focus on
          building features without worrying about inconsistencies.
        </p>
      </ContentWrapper>
    </section>
  </main>
</Base>
